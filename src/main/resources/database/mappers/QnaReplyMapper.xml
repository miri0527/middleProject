<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
   <mapper namespace="com.home.middle.board.qna.QnaReplyDAO">

	<sql id="qnaReplyCondition">
  		<where>
  			<if test="kind=='contents'">
  				CONTENTS LIKE CONCAT('%',#{search},'%')
  			</if>
  			<if test="kind=='id'">
  				ID LIKE CONCAT('%',#{search},'%')
  			</if>
  		</where>
  	</sql>
  
	<select id="getTotalCount" resultType="Long">
  		SELECT COUNT (NUM) FROM QNAREPLY
  		
  	</select>
  	
    <update id="setBoardUpdate" parameterType="QnaReplyDTO">
  		UPDATE QNAREPLY SET TITLE=#{title}, CONTENTS=#{contents} WHERE REPLYNUM=#{replyNum}
  	</update>
  	
  	
  	
      <select id="getBoardList" parameterType="Pager" resultMap="getBoardDetailResult">
	 	 SELECT (@rownum := @rownum + 1) AS R,N.*
			FROM (
				SELECT QR.NUM,QR.REPLYNUM, QR.ID ,QR.PRODUCTNUM,QR.TITLE,QR.CONTENTS,QR.REGDATE,QR.DEPTH,P.PRODUCTNAME  FROM QNAREPLY QR
					LEFT OUTER JOIN 
						PRODUCT P 
					ON QR.PRODUCTNUM = P.PRODUCTNUM
					<include refid="qnaReplyCondition"></include>
					ORDER BY DEPTH DESC
			)N, (SELECT @rownum := 0) r
			LIMIT #{startRow},#{perPage}
  	 </select>
  	 
  	 <select id="getReplyDetail" parameterType="BbsDTO" resultType="QnaReplyDTO">
	  	SELECT (@rownum := @rownum + 1) AS R, N.*
			FROM (
				SELECT * FROM QNAREPLY 
				WHERE NUM=#{num}
			)N, (SELECT @rownum := 0) r
  	 </select>
  	 
  	 <select id="getReplyUpdate" parameterType="QnaReplyDTO" resultType="QnaReplyDTO">
  	 	SELECT * FROM QNAREPLY
  	 	WHERE REPLYNUM=#{replyNum}
  	 </select>
  	
    
    <!-- 상품 이름 찾기 -->
    <select id="getProductName" parameterType="Long" resultType="String">
    	SELECT PRODUCTNAME FROM PRODUCT
    	WHERE PRODUCTNUM=#{productNum}
    </select>
    
    <!--원본 제목 찾기 -->
    <select id="getQnaTitle" parameterType="Long" resultType="String">
    	SELECT TITLE FROM QNA 
    	WHERE NUM=#{num}
    </select>
    
    <!--글쓰기 -->
    <insert id="setBoardAdd" parameterType="QnaReplyDTO"  >
    <!--파일 추가같이하고 싶으면 넣어라 -->
 	<!-- <selectKey keyProperty="num" resultType="Long" order="BEFORE">
      SELECT REVIEW_SEQ.NEXTVAL FROM DUAL
    </selectKey> -->
    
    INSERT INTO QNAREPLY (REPLYNUM,NUM,ID,TITLE,CONTENTS,REGDATE,DEPTH,PRODUCTNUM)
	VALUES(0,#{num},#{id},#{title},#{contents},NOW(),0,#{productNum})
    </insert>
    
    
   <delete id="setBoardDelete" parameterType="QnaReplyDTO">
		DELETE FROM QNAREPLY WHERE REPLYNUM = #{replyNum}
	</delete>
    
    <!--파일 추가-->
    <insert id="setProductFileAdd" parameterType="QnaReplyDTO">
	INSERT INTO QNAFILES
	VALUES (0,#{num}, #{fileName}, #{oriName})
	</insert>
	
	<select id="getBoardFileList" parameterType="BbsDTO" resultType="BoardFileDTO">
  		SELECT * FROM QNAFILES WHERE NUM=#{num}
  	</select>
  	    
      
      
   <select id="getBoardDetail" parameterType="BbsDTO" resultMap="getBoardDetailResult"> 
   		SELECT Q.*, QF.*
   		FROM QNAREPLY Q
   			LEFT JOIN
   			QNAFILES QF
   			ON (Q.NUM = QF.NUM)
   			WHERE Q.NUM=#{num}
   </select>
   
      <resultMap type="QnaReplyDTO" id="getBoardDetailResult">
			
		  <id column="REPLYNUM" property="replyNum"/>
	      <result column="NUM" property="num"/>
	      <result column="R" property="r"/>
		  <result column="TITLE" property="title"/>
		  <result column="ID" property="id"/>
		  <result column="CONTENTS" property="contents"/>
		  <result column="REGDATE" property="regDate"/>
		  <result column="HIT" property="hit"/>
		  <result column="DEPTH" property="depth"/>
	      <result column="PRODUCTNUM" property="productNum"/>
	      <association property="productDTO" javaType="ProductDTO">
	    	<result column="PRODUCTNAME" property="productName"/>
	      </association>
		<!--type에 멤버메서드중에서 속성을 넣어주기  -->
		<!--of type은 제네릭 타입을 쓰라는 뜻입니다 column은 대소문자구문 하지 않습니다-->
		<collection property="boardFileDTOs" javaType="List" ofType="BoardFileDTO">
			<id column="FILENUM" property="fileNum" />
			<result column="FILENAME"  property="fileName"/>
			<result column="ORINAME" property="oriName" />
		</collection>
	
   </resultMap>
</mapper>