<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.home.middle.product.ProductDAO">
 
 	  <sql id="ProductCondition">
      <where>
         <if test="kind == 'productName'">
           PRODUCTNAME LIKE '%' || #{search} || '%'
         </if>
      </where>
   	</sql>
   	
   	<select id="productOptionNum" resultType="Long">
		SELECT PRODUCTOPTION_SEQ.NEXTVAL FROM DUAL
	</select>
 
 	<select id="getProductNum" resultType="Long">
  		SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL
  	</select>
  	
  	
  	<select id="getProductList" resultType="ProductDTO" parameterType="ProductDTO">
  	SELECT PRODUCTNUM , PRODUCTNAME FROM PRODUCT
  	WHERE CATEGORYNUM = #{categoryNum}
  	
  	</select>

 	<select id="getProductDetail" parameterType="ProductDTO" resultMap="productDetailResult">

	SELECT P.*, PO.* ,FI.* FROM PRODUCT P
	LEFT JOIN PRODUCTOPTION PO 
	ON PO.PRODUCTNUM   = P.PRODUCTNUM 
	LEFT JOIN PRODUCTFILES FI 
	ON FI.PRODUCTNUM  = P.PRODUCTNUM 
	WHERE P.PRODUCTNUM = #{productNum}
   </select> 
 	
 <!--type=""에는 최종리턴타입  -->
   <resultMap type="ProductDTO" id="productDetailResult">
   
	   <!--Primary Key  -->
	   <id column="PRODUCTNUM" property="productNum" />
	   <!-- 그외 나머지 -->
	   <result column="PRODUCTNAME" property="productName" />
	   <result column="PRODUCTSALES" property="productSales" />
	   <result column="CATEGORYNUM" property="categoryNum" />
	   <result column="ID" property="id"/>
	   
 	   <!-- 1:n 관계일 때  -->
 	   <collection property="productOptionDTOs" javaType="List" ofType="ProductOptionDTO">
 	    <id  column="OPTIONNUM"  property="optionNum" />
 	    <result  column="PRODUCTNUM" property="productNum"/>
        <result  column="PRODUCTPRICE" property="productPrice"/>
    	<result  column="PRODUCTSTOCK" property="productStock"/>
    	<result  column="OPTIONNAME" property="optionName"/>
    	<result  column="PRODUCTDATE" property="productDate"/>
    	<result  column="OPTIONVALUE" property="optionValue"/>
    	<result  column="REF" property="ref"/>
    	<result  column="DEPTH" property="depth"/>
 	   </collection>
 	 
 	   <collection property="productImgDTOs" javaType="List" ofType="ProductImgDTO" >
 	    <id  column="FILENUM"  property="fileNum" />
        <result  column="NUM" property="num"/>
    	<result  column="FILENAME" property="fileName"/>
    	<result  column="ORINAME" property="oriName"/>
 	   </collection>
 	   
 	    <!-- 1:1 관계일 때 -->
    	<!--<association property="" javaType="">-->
   </resultMap>
   
    <select id="getProductOptionDetail" parameterType="ProductDTO" resultType="ProductOptionDTO">
		SELECT * FROM PRODUCTOPTION WHERE PRODUCTNUM = #{productNum} ORDER BY OPTIONNUM ASC
	</select>
	
	<select id="getOption" parameterType="ProductOptionDTO" resultType="ProductOptionDTO">
		SELECT * FROM PRODUCTOPTION WHERE PRODUCTNUM = #{productNum} AND REF = #{ref} AND DEPTH = #{depth} ORDER BY OPTIONNUM ASC
	</select>
	
	<select id="getTotalCount" resultType="Long" parameterType="Pager">
 		SELECT COUNT(PRODUCTNUM) FROM
		(SELECT * FROM PRODUCT P
			LEFT OUTER JOIN PRODUCTFILES FI
			USING(PRODUCTNUM)
			<include refid="ProductCondition"></include>
		)N
 		
 	</select>
	
	<insert id="setProductAdd" parameterType="ProductDTO">
		<selectKey keyProperty="productNum" resultType="Long" order="BEFORE">
			SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO PRODUCT 
		VALUES (#{productNum}, #{productName}, #{productSales}, #{categoryNum},#{id})
	</insert>
	
	<insert id="setProductFileAdd" parameterType="ProductImgDTO">
		INSERT INTO PRODUCTFILES
		VALUES (PRODUCTFILES_SEQ.NEXTVAL, #{productNum}, #{fileName}, #{oriName})
	</insert>  
	
		<select id="getMemberProductList" resultMap="productListResult" parameterType="Pager" >
				SELECT * FROM
					(SELECT ROWNUM R, N.* FROM
						(SELECT * FROM PRODUCT P
						LEFT OUTER JOIN PRODUCTFILES FI
						USING(PRODUCTNUM)
						<include refid="ProductCondition"></include>
						ORDER BY PRODUCTNUM DESC) N)
				WHERE R BETWEEN #{startRow} AND #{lastRow} 	
		
	</select>	

	 <resultMap type="ProductDTO" id="productListResult" >
   
	   <!--Primary Key  -->
	   <id column="PRODUCTNUM" property="productNum" />
	   <!-- 그외 나머지 -->
	   <result column="PRODUCTNAME" property="productName" />
	   <result column="PRODUCTSALES" property="productSales" />
	   <result column="CATEGORYNUM" property="categoryNum" />
	   <result column="ID" property="id"/>
	   
 	   <!-- 1:n 관계일 때  -->
 	    <collection property="productImgDTOs" javaType="List" ofType="ProductImgDTO" >
 	    <id  column="FILENUM"  property="fileNum" />
        <result  column="NUM" property="num"/>
    	<result  column="FILENAME" property="fileName"/>
    	<result  column="ORINAME" property="oriName"/>
 	   </collection>
 	  </resultMap> 
 	  
 	  <select id="getMemberCartDetail" resultMap="ProductCartList2" parameterType="ProductOptionDTO">
			SELECT * FROM PRODUCTOPTION PO
			LEFT OUTER JOIN PRODUCTORDER POP
			USING(PRODUCTNUM)
			WHERE PAYMENTCHECK=1
			AND PRODUCTNUM = #{productNum}
	</select>
	
	<resultMap type="ProductOptionDTO" id="ProductCartList2">
			<id column="OPTIONNUM" property="optionNum"/>
			<result column="PRODUCTPRICE" property="productPrice"/>
			<result column="OPTIONNAME" property="optionName"/>
			<result column="OPTIONVALUE" property="optionValue"/>
			<result column="DEPTH" property="depth"/>
			<result column="REF" property="ref"/>
	 		<collection property="cartDTOs"  javaType="list" ofType="CartDTO">
	 			<id column="ORDERNUM" property="orderNum"/>
	 			<result column="PAYMENTCHECK" property="paymentCheck"/>
	 		</collection>
 		
	</resultMap>
	 
	<select id="getProductFileList" resultType="ProductImgDTO">
		SELECT * FROM PRODUCTFILES
		WHERE PRODUCTNUM=#{productNum}
	</select>

	
	<update id="setProductUpdate" parameterType="ProductDTO">
		UPDATE PRODUCT 
		SET PRODUCTNAME = #{productName}, PRODUCTSALES = #{productSales}, CATEGORYNUM = #{categoryNum}
		WHERE PRODUCTNUM = #{productNum}
	</update>	
	
	<delete id="setProductFileDelete" parameterType="Long">
		DELETE PRODUCTFILES
		WHERE FILENUM=#{fileNum}
	</delete>
	
	<delete id="setProductDelete" parameterType="ProductDTO">
		DELETE PRODUCT WHERE PRODUCTNUM = #{productNum}
	</delete>
	
	<select id="getProductOptionList" parameterType="ProductOptionDTO" resultType="ProductOptionDTO">
		SELECT * FROM PRODUCTOPTION WHERE PRODUCTNUM = #{productNum} AND DEPTH = #{depth} ORDER BY OPTIONNUM ASC
	</select>
	
	<insert id="productOptionAdd0" parameterType="ProductOptionDTO">
 		INSERT INTO PRODUCTOPTION (OPTIONNUM, PRODUCTNUM, OPTIONNAME, OPTIONVALUE, PRODUCTPRICE, PRODUCTSTOCK, REF, DEPTH)
 		VALUES (#{optionNum}, #{productNum}, #{optionName}, #{optionValue}, #{productPrice}, #{productStock}, #{ref}, #{depth})
 	</insert>
 	
 	<insert id="setProductCategoryAdd" parameterType="ProductDTO">
 		INSERT INTO PRODUCT CATEGORYNUM = #{categoryNum} WHERE PRODUCTNUM = #{productNum}
 	</insert>
 	
 	<delete id="setProductOptionDelete" parameterType="ProductOptionDTO">
 		DELETE PRODUCTOPTION WHERE PRODUCTNUM = #{productNum}
 	</delete>
	</mapper>  